{"version":3,"sources":["ilus.svg","fab.js","dialog.js","dialogButton.js","timeline.js","App.js","folderview.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","style","margin","top","right","bottom","left","position","FabOne","props","mappingRunningState","react_default","a","createElement","Fab_default","color","aria-label","onClick","onClickStop","Stop_default","onClickStart","Add_default","dialogContentRender","state","projectName","saveTo","azimuth","recordBag","realtimeMapping","handleChange","name","event","_this","setState","Object","defineProperty","target","value","this","TextFieldUpdate","handleCheckboxChange","checked","mappingDialog1","DialogContent_default","TextField_default","id","label","onChange","fullWidth","FormGroup_default","column","FormControlLabel_default","control","Checkbox_default","mappingDialog2","autoFocus","dialogState","console","log","React","Component","dialogButtonRender","Button_default","variant","timeline","socket","statusPushed","className","map","status","time","Paper_default","elevation","text","styles","baseContainer","iconButton","padding","marginLeft","iconFolder","folderView","anchorEl","handleClick","currentTarget","handleClose","_this2","projectFolders","List_default","projectFolder","ListItem_default","ListItemIcon_default","Folder_default","ListItemText_default","insert","primary","IconButton_default","aria-owns","undefined","aria-haspopup","MoreVert_default","index_es","open","Boolean","onClose","MenuItem_default","selected","drawerAppBarStyle","height","childState","statuses","App","mobileOpen","mappingRunning","startDialogOpen","stopDialogOpen","startDialogPhase","powerDialogOpen","endpoint","drawer","drawerToggleHandler","startDialogOpenHandler","emit","stopDialogOpenHandler","startDialogClickHandler","startDialogCloseHandler","powerDialogCloseHandler","stopDialogCloseHandler","stopDialogClickHandler","drawerMappingOnClickHandler","drawerSavedOnClickHandler","drawerPowerOnClickHandler","drawerAboutOnClickHandler","shutdownOnClickHandler","restartOnClickHandler","socketIOClient","on","data","objBuff","_this$props","classes","theme","Toolbar","AppBar_default","Toolbar_default","Typography_default","button","FlightTakeoff_default","PowerSettingsNew_default","root","minHeight","CssBaseline_default","appBar","menuButton","Menu_default","titleText","titleTextContent","titleTextContentBold","Hidden_default","smUp","implementation","Drawer_default","container","anchor","direction","paper","drawerPaper","xsDown","fab","Dialog_default","DialogTitle_default","marginTop","backgroundColor","width","textAlign","fontFamily","aria-labelledby","dialog","textFieldUpdateHandler","DialogActions_default","dialogButton","paragraph","class","containerMain","src_timeline","folderview","paddingLeft","paddingRight","src","mandrone","alt","withStyles","_appBar","_titleTextContent","display","breakpoints","up","flexShrink","concat","marginRight","toolbar","mixins","content","flexGrow","spacing","unit","marginBottom","fontSize","withTheme","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.74d2b0b6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/ilus.b8136a1b.svg\";","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport StopIcon from '@material-ui/icons/Stop';\n// import Icon from '@material-ui/icons/I';\n\n\nconst style = {\n    margin: 0,\n    top: 'auto',\n    right: 20,\n    bottom: 20,\n    left: 'auto',\n    position: 'fixed',\n};\n\nfunction FabOne(props) {\n    \n    if(props.mappingRunningState){\n        \n        return (\n            <div>\n                <Fab style={style} color=\"secondary\" aria-label=\"Add\" onClick={props.onClickStop}>\n                    <StopIcon />\n                </Fab>\n            </div>\n        );\n\n    }else{\n        \n        return (\n            <div>\n                <Fab style={style} color=\"primary\" aria-label=\"Add\" onClick={props.onClickStart}>\n                    <AddIcon />\n                </Fab>\n            </div>\n        );\n    }\n}\n\nexport default FabOne;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\n\n\nclass dialogContentRender extends React.Component {\n    \n\n    state = {\n        projectName: \"projectName\",\n        saveTo: \"~/simpanBag/\",\n        azimuth: \"0\",\n        recordBag: true,\n        realtimeMapping: true\n    }\n\n    handleChange = name => event => {\n       \n        this.setState({ \n        [name]: event.target.value }, \n        function () {\n            this.props.TextFieldUpdate(this.state);\n        });\n    };\n\n    handleCheckboxChange = name => event => {\n       \n        this.setState({ \n        [name]: event.target.checked }, \n        function () {\n            this.props.TextFieldUpdate(this.state);\n        });\n    };\n\n    mappingDialog1 = () => {\n        return(\n            <DialogContent>\n                    \n                <TextField\n                    margin=\"dense\"\n                    id=\"projectname\"\n                    label=\"Project Name\"\n                    value={this.state.projectName}\n                    onChange={this.handleChange(\"projectName\")}\n                    fullWidth\n                />\n                {/* <TextField\n                    margin=\"dense\"\n                    id=\"saveto\"\n                    label=\"Save To\"\n                    value={this.state.saveTo}\n                    onChange={this.handleChange(\"saveTo\")}\n                    fullWidth\n                /> */}\n                <FormGroup column>\n                <FormControlLabel\n                    control={\n                    <Checkbox\n                        checked={this.state.recordBag}\n                        onChange={this.handleCheckboxChange('recordBag')}\n                        // value={this.state.recordBag}\n                    />\n                    }\n                    label=\"Record .bag\"\n                />\n                <FormControlLabel\n                    control={\n                    <Checkbox\n                        checked={this.state.realtimeMapping}\n                        onChange={this.handleCheckboxChange('realtimeMapping')}\n                        // value={this.state.realtimeMapping}\n                    />\n                    }\n                    label=\"Real-Time Mapping\"\n                />\n                </FormGroup>\n            </DialogContent>\n        );\n    };\n\n    mappingDialog2 = () => {\n\n        return (\n            <DialogContent>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"azimuth\"\n                    label=\"On-Site Azimuth\"\n                    value={this.state.azimuth}\n                    onChange={this.handleChange('azimuth')}\n                    fullWidth\n                />\n            </DialogContent>\n        );\n    };\n    \n\n    render() {\n        \n        if (!this.props.dialogState) {\n            console.log(\"this is console log\");    \n            return this.mappingDialog1() ;\n        } else {\n            console.log(\"this is console log\");\n            return this.mappingDialog2();\n        }    \n        \n    }\n\n}\n\nexport default dialogContentRender;","import React from 'react';\nimport ButtonUI from '@material-ui/core/Button';\n\nfunction dialogButtonRender(props) {\n\n    if (!props.dialogState) {\n        return(\n            <ButtonUI variant=\"contained\" onClick={props.onClick} color=\"primary\">\n            Next\n            </ButtonUI>\n        ); \n    } else {\n        return(\n            <ButtonUI variant=\"contained\" onClick={props.onClick} color=\"primary\">\n            Start\n            </ButtonUI>\n    \n        ); \n    }  \n}; \n\nexport default dialogButtonRender;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport './timeline.css';\nimport Typography from '@material-ui/core/Typography';\n\nfunction timeline(props) {\n\n    // const { classes } = props;\n    const statusPushed = props.statusPushed;\n\n    return (\n        \n        <div className=\"baseContainer\">\n            <div className=\"timeline\"></div>\n            \n            {statusPushed.map(status => (                \n                <div className=\"blockContainer\">\n                    \n                    <div className=\"timestamp\">\n                        <p className=\"timestamp-text\">{status.time}</p>\n                    </div>\n                    <div className=\"paperContainer\" >\n                        <Paper className=\"paper\" elevation={1}>\n                                <p className=\"timeline-text\">\n                                    {/* <Typography variant=\"subtitle1\" > */}\n                                        {status.text} \n                                    {/* </Typography> */}\n                                </p>\n                        </Paper>\n                    </div>\n                </div>\n            ))}\n    \n        </div>\n    )\n}\n\n\nexport default timeline;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TypoGraphy from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n \nimport ButtonUI from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport MappingIcon from '@material-ui/icons/FlightTakeoff';\nimport AboutIcon from '@material-ui/icons/Help';\nimport PowerIcon from '@material-ui/icons/PowerSettingsNew';\n\nimport DialogContentStd from '@material-ui/core/DialogContent';\n\nimport FabOne from './fab';\nimport DialogContent from './dialog'\nimport DialogButton from './dialogButton'\nimport Timeline from './timeline'\nimport FolderView from './folderview'\nimport mandrone from './ilus.svg';\n\nimport socketIOClient from \"socket.io-client\"\nimport { DialogContentText } from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\n\nimport './App.css';\n\n\nconst drawerAppBarStyle = {\n  height: 150,\n};\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    backgroundColor: 'white',\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n    height: 200,\n    background: 'linear-gradient(45deg, #000080 30%, #800080 90%)',\n  },\n  menuButton: {\n    padding: 0,\n    margin: 0,\n    marginRight: 20,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,   \n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    marginTop: 120,\n  },\n  timeline: {\n    marginLeft: 100,\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: 30,\n    },\n  },\n  containerMain: {\n    marginTop: 200,\n    marginLeft: 4,\n    marginBottom: 30,\n  },\n  titleText: {\n      margin: 'auto',\n      marginBottom: 50,\n      padding: 0,\n      [theme.breakpoints.up('sm')]: {\n        marginBottom: 75,\n      },      \n  },\n  titleTextContent: {\n    fontSize: 35,\n    [theme.breakpoints.up('sm')]: {\n      fontSize: 40,\n    },\n    fontFamily: \"samsung-one-400\",\n  },\n  titleTextContentBold: {\n    fontFamily: \"samsung-one-800\",\n  }\n});\n\nlet socket;\n\nlet childState = {\n  projectName: \"projectName\",\n  saveTo: \"~/simpanBag/\",\n  azimuth: \"0\",\n  recordBag: true,\n  realtimeMapping: true\n}; \n\nvar serverState = {\n  mappingRunning: false,\n  runRoscore: false,\n  runTrajectoryLogger: false,\n  runLidarMapper: false,\n  withRecord: false,\n  withRTmapping: false,\n};\n\nvar statuses = [];\nvar projectFolders = [];\n\nclass App extends React.Component {\n\n  state = {\n    mobileOpen: false,\n    mappingRunning: false,\n    startDialogOpen: false,\n    stopDialogOpen: false,\n    startDialogPhase: false,\n    powerDialogOpen: false,\n    endpoint: \"http://100.100.0.1:5000\",\n    drawer: \"mapping\",\n  };\n  \n  componentDidMount() {\n    const { endpoint } = this.state;\n    socket = socketIOClient(endpoint);\n    socket.on(\"mappingRunning\", data => (this.setState({ mappingRunning: data})) );\n    socket.on(\"serverMessage\", data => (statuses = data));\n    socket.on(\"serverFolderRead\", data => (projectFolders = data));\n  };\n\n  drawerToggleHandler = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  startDialogOpenHandler = () => {\n      this.setState({ startDialogPhase: false});\n      this.setState({ startDialogOpen: true});\n      socket.emit(\"frontInput\", 999);\n  };\n\n  stopDialogOpenHandler = () => {\n      this.setState({ stopDialogOpen: true});\n  };\n\n  startDialogClickHandler = () => {\n\n    const startDialogPhase = this.state.startDialogPhase;\n\n    if( startDialogPhase == false )\n      this.setState({ startDialogPhase: true});\n    else{\n      this.setState({ mappingRunning: true});\n      socket.emit(\"clientRequestParams\", childState);\n      socket.emit(\"mappingStart\", true);\n      this.setState({ startDialogOpen: false});  \n    };    \n  };\n\n  startDialogCloseHandler = () => {\n    this.setState({ startDialogOpen: false});\n  };\n  \n  powerDialogCloseHandler = () => {\n    this.setState({ powerDialogOpen: false});\n  };\n\n  stopDialogCloseHandler = () => {\n    this.setState({ stopDialogOpen: false});\n  };\n\n  stopDialogClickHandler = () => {\n    this.setState({ mappingRunning: false});\n    socket.emit(\"mappingStart\", false);\n    this.setState({ stopDialogOpen: false});  \n  };\n\n  textFieldUpdateHandler(objBuff){\n    childState = objBuff;\n  };\n\n  drawerMappingOnClickHandler = () => {\n    this.setState({ drawer: \"mapping\"}, () =>\n    this.setState({ mobileOpen: false }));\n  };\n\n  drawerSavedOnClickHandler = () => {\n    this.setState({ drawer: \"saved\"}, () =>\n    this.setState({ mobileOpen: false }));\n    \n    socket.emit(\"clientFolderRead\", true);\n  };\n\n  drawerPowerOnClickHandler = () => {\n    this.setState({ drawer: \"mapping\"}, () => {\n      this.setState({ mobileOpen: false });\n      this.setState({ powerDialogOpen: true});\n    });\n  };\n\n  drawerAboutOnClickHandler = () => {\n    this.setState({ drawer: \"about\"}, () =>\n    this.setState({ mobileOpen: false }));\n  };\n\n  shutdownOnClickHandler = () => {\n    socket.emit(\"shutdown\", true);\n  };\n\n  restartOnClickHandler = () => {\n    socket.emit(\"restart\", true);\n  };\n\n  render() {\n\n    const { classes, theme } = this.props;\n\n    const drawer = (\n      <div>\n        <div className={classes.Toolbar} />\n        <AppBar style={drawerAppBarStyle} color=\"white\" position=\"static\">\n          <Toolbar>\n            <TypoGraphy variant=\"subheading\"\n                        color=\"inherit\"\n            >\n                 \n            </TypoGraphy>           \n          </Toolbar>\n        </AppBar>\n        \n        <List>\n            <ListItem button selected={this.state.drawer === \"mapping\"} onClick={this.drawerMappingOnClickHandler}>\n              <ListItemIcon>\n                <MappingIcon />\n              </ListItemIcon>\n              <ListItemText insert primary=\"Mapping\" />\n            </ListItem>\n            \n            {/* <ListItem button selected={this.state.drawer === \"saved\"} onClick={this.drawerSavedOnClickHandler}>\n              <ListItemIcon>\n                <FolderIcon />\n              </ListItemIcon>\n              <ListItemText insert primary=\"Saved\" />\n            </ListItem> */}\n            \n            <ListItem button selected={this.state.drawer === \"power\"} onClick={this.drawerPowerOnClickHandler}>\n              <ListItemIcon>\n                <PowerIcon />\n              </ListItemIcon>\n              <ListItemText insert primary=\"Power\" />\n            </ListItem>\n\n            {/* <ListItem button selected={this.state.drawer === \"about\"} onClick={this.drawerAboutOnClickHandler}>\n              <ListItemIcon>\n                <AboutIcon />\n              </ListItemIcon>\n              <ListItemText insert primary=\"About\" />\n            </ListItem> */}\n        </List>\n      </div>    \n    );\n\n    return (\n      <div className={classes.root} style={{minHeight: '100vh'}}>\n\n        <CssBaseline/>\n        <AppBar className={classes.appBar} position=\"fixed\">\n          <Toolbar >\n\n            <IconButton color=\"inherit\"\n                        aria-label=\"Open drawer\"\n                        onClick={this.drawerToggleHandler}\n                        className={classes.menuButton}\n            >\n              <MenuIcon />  \n            </IconButton>\n            \n          </Toolbar>\n\n          <div className={classes.titleText}>\n            <TypoGraphy variant=\"title\"\n                        color=\"inherit\">\n              <p className={classes.titleTextContent}>\n                <span>Mapper</span>\n                <span className={classes.titleTextContentBold}>App</span>       \n              </p>\n            </TypoGraphy>\n          </div>\n        </AppBar>\n        \n        <nav className={classes.drawer}> \n          <Hidden smUp implementation=\"css\">\n            <Drawer\n                container={this.props.container}\n                variant=\"temporary\"\n                anchor={theme.direction == 'rtl' ? 'right' : 'left'}\n                open={this.state.mobileOpen}\n                onClose={this.drawerToggleHandler}\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n              >\n                {drawer}\n            </Drawer>\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        \n        { this.state.drawer === \"mapping\" && \n          <FabOne onClickStart={this.startDialogOpenHandler}\n                  onClickStop={this.stopDialogOpenHandler} \n                  mappingRunningState={this.state.mappingRunning}\n          />\n        }\n\n        <Dialog\n          open={this.state.powerDialogOpen}\n          onClose={this.powerDialogCloseHandler}\n        >\n          <DialogTitle>Device Power</DialogTitle>\n          <DialogContentStd > \n            <div style={{color:\"grey\"}}>\n              Make sure to stop mapping process first!\n            </div>\n            <List style={{margin: 0, marginTop: 65, padding: 0}}>\n              {/* <Divider/> */}\n              <ListItem button style={{backgroundColor:\"#000080\",}} onClick={this.shutdownOnClickHandler}>\n                <div style={{padding: 2, width: '100%', textAlign:\"center\"}}>\n                  <b style={{color:\"white\", fontFamily: \"samsung-one-400\"}}>Power Off</b>\n                </div>\n              </ListItem>\n              {/* <Divider/> */}\n              <ListItem button style={{marginTop: 10, backgroundColor:\"#800080\",}} onClick={this.restartOnClickHandler}> \n                <div style={{ padding: 2, width: '100%', textAlign:'center'}}>\n                  <b style={{color:\"white\", fontFamily: \"samsung-one-400\"}}>Restart</b>\n                </div>\n              </ListItem>\n              {/* <Divider/> */}\n            </List>\n          </DialogContentStd>\n        </Dialog>\n\n        <Dialog\n          open={this.state.startDialogOpen}\n          onClose={this.startDialogCloseHandler}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Mapping Preparation</DialogTitle>\n          <DialogContent dialogState={this.state.startDialogPhase} TextFieldUpdate={this.textFieldUpdateHandler}/>\n          <DialogActions>\n            <ButtonUI onClick={this.startDialogCloseHandler} color=\"primary\">\n              Cancel\n            </ButtonUI>\n              <DialogButton dialogState={this.state.startDialogPhase} onClick={this.startDialogClickHandler}/>\n          </DialogActions>\n        </Dialog>\n\n        <Dialog\n          open={this.state.stopDialogOpen}\n          onClose={this.stopDialogCloseHandler}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Stop Recording</DialogTitle>\n          <DialogContentStd>\n            <DialogContentText>\n              <TypoGraphy paragraph>\n                <p>\n                  Are you sure to stop mapping process ?    \n                </p>\n              </TypoGraphy>\n            </DialogContentText>\n          </DialogContentStd>\n\n          <DialogActions>\n            <ButtonUI onClick={this.stopDialogCloseHandler} color=\"primary\">\n              Cancel\n            </ButtonUI>\n            <ButtonUI variant=\"contained\" onClick={this.stopDialogClickHandler} color=\"primary\">\n              YES\n            </ButtonUI>\n          </DialogActions>\n        </Dialog>   \n\n        { this.state.drawer === \"mapping\" && \n          <div class={classes.containerMain}>\n            <Timeline statusPushed={statuses}/>\n          </div>\n        }\n\n        { this.state.drawer === \"saved\" && \n          <div class={classes.containerMain}>\n            <FolderView projectFolders={projectFolders}/>\n          </div>\n        }\n\n        { this.state.drawer === \"power\" && \n          <div class={classes.containerMain}>\n            \n            <Fab style={{margin: 25, paddingLeft: 25, paddingRight: 25}} color=\"primary\" variant=\"extended\">\n              Shut Down\n            </Fab>\n            \n            <Fab color=\"primary\" variant=\"extended\">\n              Restart\n            </Fab>\n          </div>\n        }\n\n        { this.state.drawer === \"about\" && \n          <div class={classes.containerMain}>\n            <img style={{width: '100%', height: '100%'}} src={mandrone} alt=\"a man with drone\"/>\n          </div>\n        }\n        \n        \n        {/* <div class={classes.containerMain}>\n         <Timeline open={false} statusPushed={statuses}/>\n        </div>)  */}\n      \n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n  container: PropTypes.object,\n  theme: PropTypes.object.isRequired,\n};\nexport default withStyles(styles, { withTheme: true })(App);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Menu, MenuList } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\n\n\nconst styles = {\n    baseContainer: {\n    },\n    iconButton: {\n        padding: 0,\n        margin: 0,\n        marginLeft: 65,\n    },\n    iconFolder: {\n        padding: 0,\n        margin: 0,\n    },\n}\n\n\nclass folderView extends React.Component {\n \n    state = {\n        anchorEl: null,\n    };\n       \n    handleClick = event => {\n        this.setState({anchorEl: event.currentTarget})\n    };\n    \n    handleClose = () => {\n        this.setState({anchorEl: null})\n    };\n    \n    \n    render() {\n\n        // const projectsFolders = this.props.projectsFolders;\n        // const projectFolders = [];\n        const projectFolders = this.props.projectFolders;\n        const { anchorEl } = this.state;\n\n        return(\n            <div style={styles.baseContainer}>\n                <List>\n                    {projectFolders.map(projectFolder => (\n                        <ListItem>\n                            <ListItemIcon style={styles.iconFolder}>\n                                <FolderIcon/>\n                            </ListItemIcon>\n                            <ListItemText insert primary={projectFolder} />\n                            <IconButton style={styles.iconButton}\n                                        aria-owns={anchorEl ? 'folder-menu' : undefined}\n                                        aria-haspopup=\"true\"\n                                        onClick={this.handleClick}\n                            >\n                                <MoreIcon/>\n                            </IconButton>\n                            \n                        </ListItem>\n                    ))}\n                </List>\n\n                <Menu\n                    id='folder-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleClose}\n                >\n                    <MenuItem selected={false} onClick={this.handleClose}>copy to drive</MenuItem>\n                    <MenuItem selected={false} onClick={this.handleClose}>delete</MenuItem>\n                </Menu>\n            </div>\n        )\n    }\n      \n}\n\nexport default folderView;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}