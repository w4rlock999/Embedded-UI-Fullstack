{"version":3,"sources":["calib_magneto.svg","ilus.svg","fab.js","dialog.js","dialogButton.js","timeline.js","App.js","folderview.js","removableDrive.js","magnetoCalib.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","style","margin","top","right","bottom","left","position","FabOne","props","processRunningState","react_default","a","createElement","Fab_default","color","aria-label","onClick","onClickStop","Stop_default","onClickStart","Add_default","dialogContentRender","state","projectName","saveTo","recordBag","RTKprocess","PPKprocess","handleNameChange","name","event","_this","setState","Object","defineProperty","target","value","this","TextFieldUpdate","handleChange","mappingDialog1","DialogContent_default","TextField_default","id","label","onChange","fullWidth","RadioGroup_default","FormControlLabel_default","control","Radio_default","mappingDialog2","autoFocus","azimuth","React","Component","dialogButtonRender","Button_default","variant","timeline","socket","statusPushed","className","map","status","fontFamily","fontSize","time","Paper_default","elevation","text","styles","baseContainer","iconButton","padding","float","iconFolder","folderView","anchorEl","folderSelected","snackbarOpen","handleClick","folder","currentTarget","handleCopy","copyOnClickHandler","handleDelete","deleteOnClickHandler","handleClose","_this2","on","data","enqueueSnackbar","anchorOrigin","vertical","horizontal","concat","err","_this3","projectFolders","List_default","projectFolder","ListItem_default","ListItemIcon_default","Folder_default","ListItemText_default","insert","disableTypography","primary","Typography_default","type","IconButton_default","aria-owns","undefined","aria-haspopup","MoreVert_default","index_es","open","Boolean","onClose","MenuItem_default","selected","withSnackbar","root","width","display","headerText","marginTop","textAlign","subHeaderText","fabContainer","pageState","removableDrive","paddingLeft","paddingRight","checkOnClickHandler","object","LinearProgress_default","totalSpace","freeSpace","height","borderRadius","backgroundColor","marginLeft","toFixed","ejectOnClickHandler","overflowX","processText","marginBottom","fabContainer2","magnetoCalibState","magnetoCalib","calibLaunchOnClickHandler","magnetoCalibAccuracy","calibStartOnClickHandler","calibSaveOnClickHandler","calibCloseOnClickHandler","src","device360","alt","calibStopOnClickHandler","childState","statuses","removableDiskStatus","removableDiskObject","App","mobileOpen","processRunning","startDialogOpen","stopDialogOpen","powerDialogOpen","endpoint","drawer","drawerToggleHandler","startDialogOpenHandler","stopDialogOpenHandler","startDialogClickHandler","emit","startDialogCloseHandler","powerDialogCloseHandler","stopDialogCloseHandler","stopDialogClickHandler","calibLaunchClickHandler","calibCloseClickHandler","calibStartClickHandler","calibStopClickHandler","calibSaveClickHandler","rmvableDCheckClickHandler","rmvableDEjectClickHandler","drawerMappingOnClickHandler","drawerSavedOnClickHandler","drawerPowerOnClickHandler","drawerRmvableDOnClickHandler","drawerMagnetoCalibClickHandler","drawerAboutOnClickHandler","shutdownOnClickHandler","restartOnClickHandler","socketIOClient","objBuff","_this$props","classes","theme","Toolbar","Divider_default","button","FlightTakeoff_default","Usb_default","AllInclusive_default","PowerSettingsNew_default","minHeight","CssBaseline_default","AppBar_default","appBar","Toolbar_default","menuButton","Menu_default","titleText","titleTextContent","titleTextContentBold","Hidden_default","smUp","implementation","Drawer_default","container","anchor","direction","paper","drawerPaper","xsDown","fab","Dialog_default","DialogTitle_default","background","border","aria-labelledby","dialog","textFieldUpdateHandler","DialogActions_default","dialogButton","paragraph","class","containerMain","src_timeline","build","maxSnack","folderview","src_removableDrive","containerMainFull","src_magnetoCalib","mandrone","withStyles","_appBar","_titleTextContent","breakpoints","up","flexShrink","marginRight","toolbar","mixins","content","flexGrow","spacing","unit","withTheme","window","location","hostname","match","ReactDOM","render","src_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.18e903f2.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/calib_magneto.693b6ce5.svg\";","module.exports = __webpack_public_path__ + \"static/media/ilus.b8136a1b.svg\";","import React from 'react';\nimport Fab from '@material-ui/core/Fab';\nimport AddIcon from '@material-ui/icons/Add';\nimport StopIcon from '@material-ui/icons/Stop';\n// import Icon from '@material-ui/icons/I';\n\n\nconst style = {\n    margin: 0,\n    top: 'auto',\n    right: 20,\n    bottom: 20,\n    left: 'auto',\n    position: 'fixed',\n};\n\nfunction FabOne(props) {\n    \n    if(props.processRunningState){\n        \n        return (\n            <div>\n                <Fab style={style} color=\"secondary\" aria-label=\"Add\" onClick={props.onClickStop}>\n                    <StopIcon />\n                </Fab>\n            </div>\n        );\n\n    }else{\n        \n        return (\n            <div>\n                <Fab style={style} color=\"primary\" aria-label=\"Add\" onClick={props.onClickStart}>\n                    <AddIcon />\n                </Fab>\n            </div>\n        );\n    }\n}\n\nexport default FabOne;\n","import React from 'react';\nimport TextField from '@material-ui/core/TextField';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport RadioGroup from '@material-ui/core/RadioGroup';\nimport Radio from '@material-ui/core/Radio';\n\nclass dialogContentRender extends React.Component {\n    \n\n    state = {\n        projectName: \"projectName\",\n        saveTo: \"~/simpanBag/\",\n        recordBag: true,\n        RTKprocess: true,\n        PPKprocess: false,\n    }\n\n    handleNameChange = name => event => {\n       \n        this.setState({ \n        [name]: event.target.value }, \n        function () {\n            this.props.TextFieldUpdate(this.state);\n        });\n    };\n\n    // handleCheckboxChange = name => event => {\n       \n    //     if(name === 'RTK')\n\n    //     this.setState({ \n    //     [name]: event.target.checked }, \n    //     function () {\n    //         this.props.TextFieldUpdate(this.state);\n    //     });\n    // };\n\n    handleChange = event => {\n        if(event.target.value === \"RTK\"){\n            this.setState({RTKprocess: true},() => {\n                this.setState({PPKprocess: false}, () => {\n                    this.props.TextFieldUpdate(this.state);\n                });\n            });\n        }else\n        if(event.target.value === \"PPK\"){\n            this.setState({PPKprocess: true},() => {\n                this.setState({RTKprocess: false}, () => {\n                    this.props.TextFieldUpdate(this.state);\n                });\n            });\n        }\n    };\n\n    handleValue \n\n    mappingDialog1 = () => {\n        return(\n            <DialogContent>\n                    \n                <TextField\n                    margin=\"dense\"\n                    id=\"projectname\"\n                    label=\"Project Name\"\n                    value={this.state.projectName}\n                    onChange={this.handleNameChange(\"projectName\")}\n                    fullWidth\n                />\n                {/* <TextField\n                    margin=\"dense\"\n                    id=\"saveto\"\n                    label=\"Save To\"\n                    value={this.state.saveTo}\n                    onChange={this.handleChange(\"saveTo\")}\n                    fullWidth\n                /> */}\n                <RadioGroup\n                    value={(this.state.RTKprocess && \"RTK\")||(this.state.PPKprocess && \"PPK\")}\n                    onChange={this.handleChange}\n                >\n                    <FormControlLabel value=\"RTK\" control={<Radio />} label=\"RTK mode\" />\n                    <FormControlLabel value=\"PPK\" control={<Radio />} label=\"PPK mode\" />\n                </RadioGroup>\n            </DialogContent>\n        );\n    };\n\n    mappingDialog2 = () => {\n\n        return (\n            <DialogContent>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"azimuth\"\n                    label=\"On-Site Azimuth\"\n                    value={this.state.azimuth}\n                    onChange={this.handleChange('azimuth')}\n                    fullWidth\n                />\n            </DialogContent>\n        );\n    };\n    \n\n    render() {\n        \n        // if (!this.props.dialogState) {  \n        //     return this.mappingDialog1() ;\n        // } else {\n        //     return this.mappingDialog2();\n        // }    \n        return this.mappingDialog1() ;\n    }\n\n}\n\nexport default dialogContentRender;","import React from 'react';\nimport ButtonUI from '@material-ui/core/Button';\n\nfunction dialogButtonRender(props) {\n\n    // if (!props.dialogState) {\n    //     return(\n    //         <ButtonUI variant=\"contained\" onClick={props.onClick} color=\"primary\">\n    //         Next\n    //         </ButtonUI>\n    //     ); \n    // } else {\n    //     return(\n    //         <ButtonUI variant=\"contained\" onClick={props.onClick} color=\"primary\">\n    //         Start\n    //         </ButtonUI>\n    \n    //     ); \n    // }\n    return(\n        <ButtonUI variant=\"contained\" onClick={props.onClick} color=\"primary\">\n        Start\n        </ButtonUI>\n\n    );   \n}; \n\nexport default dialogButtonRender;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport './timeline.css';\nimport Typography from '@material-ui/core/Typography';\n\nimport './Font.css';\n\nfunction timeline(props) {\n\n    // const { classes } = props;\n    const statusPushed = props.statusPushed;\n\n    return (\n        \n        <div className=\"baseContainer\">\n            <div className=\"timeline\"></div>\n            \n            {statusPushed.map(status => (                \n                <div className=\"blockContainer\">\n                    \n                    <div className=\"timestamp\">\n                        <p className=\"timestamp-text\" style={{fontFamily: 'samsung-one-600', fontSize: '12px'}}>\n                            {status.time}\n                        </p>\n                    </div>\n                    <div className=\"paperContainer\" >\n                        <Paper className=\"paper\" elevation={1}>\n                                <p className=\"timeline-text\" style={{fontFamily:'samsung-one-400'}}>\n                                    {/* <Typography variant=\"subtitle1\" > */}\n                                        {status.text} \n                                    {/* </Typography> */}\n                                </p>\n                        </Paper>\n                    </div>\n                </div>\n            ))}\n    \n        </div>\n    )\n}\n\n\nexport default timeline;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport AppBar from '@material-ui/core/AppBar';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport Divider from '@material-ui/core/Divider';\nimport Drawer from '@material-ui/core/Drawer';\nimport Hidden from '@material-ui/core/Hidden';\nimport IconButton from '@material-ui/core/IconButton';\nimport InboxIcon from '@material-ui/icons/MoveToInbox';\nimport List from '@material-ui/core/List';\nimport MenuList from '@material-ui/core/MenuList';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport TypoGraphy from '@material-ui/core/Typography';\nimport { withStyles } from '@material-ui/core/styles';\n \nimport ButtonUI from '@material-ui/core/Button';\nimport Fab from '@material-ui/core/Fab';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nimport MailIcon from '@material-ui/icons/Mail';\nimport MenuIcon from '@material-ui/icons/Menu';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport MappingIcon from '@material-ui/icons/FlightTakeoff';\nimport AboutIcon from '@material-ui/icons/Help';\nimport PowerIcon from '@material-ui/icons/PowerSettingsNew';\nimport USBIcon from '@material-ui/icons/Usb';\nimport MagCalibIcon from '@material-ui/icons/AllInclusive';\n\nimport DialogContentStd from '@material-ui/core/DialogContent';\n\nimport FabOne from './fab';\nimport DialogContent from './dialog'\nimport DialogButton from './dialogButton'\nimport Timeline from './timeline'\nimport FolderView from './folderview'\nimport RemovableDrive from './removableDrive';\nimport MagnetoCalib from './magnetoCalib';\nimport mandrone from './ilus.svg';\n\nimport socketIOClient from \"socket.io-client\"\nimport { DialogContentText } from '@material-ui/core';\nimport { red } from '@material-ui/core/colors';\n\nimport { SnackbarProvider } from \"notistack\";\n\nimport './Font.css';\n\nconst drawerAppBarStyle = {\n  height: 150,\n};\n\nconst drawerWidth = 240;\n\nconst styles = theme => ({\n  root: {\n    display: 'flex',\n  },\n  drawer: {\n    [theme.breakpoints.up('sm')]: {\n      width: drawerWidth,\n      flexShrink: 0,\n    },\n  },\n  appBar: {\n    marginLeft: drawerWidth,\n    [theme.breakpoints.up('sm')]: {\n      width: `calc(100% - ${drawerWidth}px)`,\n    },\n    height: 200,\n    background: 'linear-gradient(45deg, #000080 30%, #800080 90%)',\n  },\n  menuButton: {\n    padding: 0,\n    margin: 0,\n    marginRight: 20,\n    [theme.breakpoints.up('sm')]: {\n      display: 'none',\n    },\n  },\n  toolbar: theme.mixins.toolbar,\n  drawerPaper: {\n    width: drawerWidth,   \n  },\n  content: {\n    flexGrow: 1,\n    padding: theme.spacing.unit * 3,\n    marginTop: 120,\n  },\n  timeline: {\n    marginLeft: 100,\n    [theme.breakpoints.up('sm')]: {\n      marginLeft: 30,\n    },\n  },\n  containerMain: {\n    marginTop: 200,\n    marginLeft: 4,\n    marginRight: 4,\n    marginBottom: 30,\n    width: '100%',\n  },\n  containerMainFull: {\n    marginTop: 200,\n    width: '100%',\n    height: '100%',\n    // overflow: 'hidden',\n    // position: 'fixed'\n  },\n  titleText: {\n      margin: 'auto',\n      marginBottom: 50,\n      padding: 0,\n      [theme.breakpoints.up('sm')]: {\n        marginBottom: 75,\n      },      \n  },\n  titleTextContent: {\n    fontSize: 35,\n    [theme.breakpoints.up('sm')]: {\n      fontSize: 40,\n    },\n    fontFamily: \"samsung-one-400\",\n  },\n  titleTextContentBold: {\n    fontFamily: \"samsung-one-800\",\n  }\n});\n\nlet socket;\n\nlet childState = {\n  projectName: \"projectName\",\n  saveTo: \"~/simpanBag/\",\n  recordBag: true,\n  RTKprocess: true,\n  PPKprocess: false,\n}; \n\nvar statuses = [];\nvar projectFolders = [];\nvar removableDiskStatus = false;\nvar removableDiskObject = {};\n\nclass App extends React.Component {\n\n  state = {\n    mobileOpen: false,\n    processRunning: false,\n    startDialogOpen: false,\n    stopDialogOpen: false,\n    powerDialogOpen: false,\n    endpoint: \"http://localhost:5000\",    //TO SET SERVER ADDRESS \n    drawer: \"mapping\",\n    magnetoCalib: \"not ready\",\n    magnetoCalibAccuracy: \"no accuracy data\",\n  };\n  \n  componentDidMount() {\n    const { endpoint } = this.state;\n    socket = socketIOClient(endpoint);\n    socket.on(\"processRunning\", data => (this.setState({ processRunning: data})) );\n    socket.on(\"serverMessage\", data => (statuses = data));\n    socket.on(\"serverFolderRead\", data => (projectFolders = data));\n    socket.on(\"rmvableDStatus\", data => (removableDiskStatus = data));\n    socket.on(\"rmvableDObject\", data => (removableDiskObject = data));\n    socket.on(\"magnetoCalibState\", data => (this.setState({ magnetoCalib: data })) );\n    socket.on(\"magnetoCalibAccuracy\", data => (this.setState({ magnetoCalibAccuracy: data })) );\n  };\n\n  drawerToggleHandler = () => {\n    this.setState(state => ({ mobileOpen: !state.mobileOpen }));\n  };\n\n  startDialogOpenHandler = () => {\n      // this.setState({ startDialogPhase: false});\n      this.setState({ startDialogOpen: true});\n  };\n\n  stopDialogOpenHandler = () => {\n      this.setState({ stopDialogOpen: true});\n  };\n\n  startDialogClickHandler = () => {\n\n    // const startDialogPhase = this.state.startDialogPhase;\n\n    // if( startDialogPhase == false )\n    //   this.setState({ startDialogPhase: true});\n    // else{\n    //   // this.setState({ processRunning: true});\n    // socket.emit(\"clientRequest\", childState);\n    // socket.emit(\"processStart\", true);\n    // this.setState({ startDialogOpen: false});  \n    // };    \n    socket.emit(\"clientRequest\", childState);\n    socket.emit(\"processStart\", true);\n    this.setState({ startDialogOpen: false});    \n  };\n\n  startDialogCloseHandler = () => {\n    this.setState({ startDialogOpen: false});\n  };\n  \n  powerDialogCloseHandler = () => {\n    this.setState({ powerDialogOpen: false});\n  };\n\n  stopDialogCloseHandler = () => {\n    this.setState({ stopDialogOpen: false});\n  };\n\n  stopDialogClickHandler = () => {\n    this.setState({ processRunning: false});\n    socket.emit(\"processStart\", false);\n    this.setState({ stopDialogOpen: false});  \n  };\n\n  textFieldUpdateHandler(objBuff){\n    childState = objBuff;\n  };\n\n  calibLaunchClickHandler = () => {\n    socket.emit(\"magnetoCalibLaunch\",true);\n  };\n\n  calibCloseClickHandler = () => {\n    socket.emit(\"magnetoCalibLaunch\",false);\n  };\n\n  calibStartClickHandler = () => {\n    socket.emit(\"magnetoCalibStart\",true);\n  };\n\n  calibStopClickHandler = () => {\n    socket.emit(\"magnetoCalibStart\",false);\n  };\n\n  calibSaveClickHandler = () => {\n    socket.emit(\"magnetoCalibSave\",true);\n  };\n\n  rmvableDCheckClickHandler = () => {\n    socket.emit(\"rmvableDCheck\", true);\n  };\n\n  rmvableDEjectClickHandler = () => {\n    socket.emit(\"rmvableDEject\", true);\n  };\n\n  copyOnClickHandler = (projectFolder) => {\n    socket.emit(\"copyProject\", projectFolder);\n  };\n  \n  deleteOnClickHandler = (projectFolder) => {\n    socket.emit(\"deleteProject\", projectFolder);\n  };\n\n  drawerMappingOnClickHandler = () => {\n    this.setState({ drawer: \"mapping\"}, () =>\n    this.setState({ mobileOpen: false }));\n  };\n\n  drawerSavedOnClickHandler = () => {\n    this.setState({ drawer: \"saved\"}, () =>\n    this.setState({ mobileOpen: false }));\n    \n    socket.emit(\"clientFolderRead\", true);\n  };\n\n  drawerPowerOnClickHandler = () => {\n    this.setState({ drawer: \"mapping\"}, () => {\n      this.setState({ mobileOpen: false });\n      this.setState({ powerDialogOpen: true});\n    });\n  };\n\n  drawerRmvableDOnClickHandler = () => {\n    this.setState({ drawer: \"removableDrive\"}, () => {\n      this.setState({ mobileOpen: false });\n    });\n  };\n\n  drawerMagnetoCalibClickHandler = () => {\n    this.setState({ drawer: \"magnetoCalib\"}, () => {\n      this.setState({ mobileOpen: false });\n    });\n  };\n\n  drawerAboutOnClickHandler = () => {\n    this.setState({ drawer: \"about\"}, () =>\n    this.setState({ mobileOpen: false }));\n  };\n\n  shutdownOnClickHandler = () => {\n    socket.emit(\"shutdown\", true);\n  };\n\n  restartOnClickHandler = () => {\n    socket.emit(\"restart\", true);\n  };\n\n  render() {\n\n    const { classes, theme } = this.props;\n\n    const drawer = (\n      <div>\n        <div className={classes.Toolbar} />\n        {/* <AppBar style={drawerAppBarStyle} color=\"white\" position=\"static\">\n          <Toolbar>\n            <TypoGraphy variant=\"subheading\"\n                        color=\"inherit\"\n            >\n            </TypoGraphy>           \n          </Toolbar>\n        </AppBar> */}\n        \n        <div style={{height: 145, width: '100%', backgroundColor:'#FFDE03'}}>\n        </div>\n        <Divider/>\n        <List style={{margin: 0, padding: 0}}>\n            <ListItem button selected={this.state.drawer === \"mapping\"} onClick={this.drawerMappingOnClickHandler}>\n              <ListItemIcon>\n                <MappingIcon />\n              </ListItemIcon>\n              <ListItemText insert primary=\"Mapping\" />\n            </ListItem>\n            \n            <ListItem button selected={this.state.drawer === \"saved\"} onClick={this.drawerSavedOnClickHandler}>\n              <ListItemIcon>\n                <FolderIcon />\n              </ListItemIcon>\n              <ListItemText insert primary=\"Saved Projects\" />\n            </ListItem>\n            \n            <ListItem button selected={this.state.drawer === \"removableDrive\"} onClick={this.drawerRmvableDOnClickHandler}>\n              <ListItemIcon>\n                <USBIcon />\n              </ListItemIcon>\n              <ListItemText insert primary=\"Removable Drive\" />\n            </ListItem>\n\n            <ListItem button selected={this.state.drawer === \"magnetoCalib\"} onClick={this.drawerMagnetoCalibClickHandler}>\n              <ListItemIcon>\n                <MagCalibIcon />\n              </ListItemIcon>\n              <ListItemText insert primary=\"Calibration\" /> \n            </ListItem>\n\n            <Divider/>\n            <ListItem button selected={this.state.drawer === \"power\"} onClick={this.drawerPowerOnClickHandler}>\n              <ListItemIcon>\n                <PowerIcon />\n              </ListItemIcon>\n              <ListItemText insert primary=\"Power\" />\n            </ListItem>\n            \n            \n            {/* <ListItem button selected={this.state.drawer === \"about\"} onClick={this.drawerAboutOnClickHandler}>\n              <ListItemIcon>\n                <AboutIcon />\n              </ListItemIcon>\n              <ListItemText insert primary=\"About\" />\n            </ListItem> */}\n        </List>\n      </div>    \n    );\n\n    return (\n      <div className={classes.root} style={{minHeight: '100vh', \n                                            backgroundColor: (this.state.magnetoCalib === \"calibrating\" \n                                            && this.state.drawer === \"magnetoCalib\" ) ? \"#002b36\":\"white\" }}>\n\n        {/* //------------------------- AppBar Render\n        //--------------------------------------- */}\n\n        <CssBaseline/>\n        <AppBar className={classes.appBar} position=\"fixed\">\n          <Toolbar >\n\n            <IconButton color=\"inherit\"\n                        aria-label=\"Open drawer\"\n                        onClick={this.drawerToggleHandler}\n                        className={classes.menuButton}\n            >\n              <MenuIcon />  \n            </IconButton>\n            \n          </Toolbar>\n\n          <div className={classes.titleText}>\n            <TypoGraphy variant=\"title\"\n                        color=\"inherit\">\n              <p className={classes.titleTextContent}>\n                { this.state.drawer === \"mapping\" &&\n                  <div>\n                    <span>Mapper</span>\n                    <span className={classes.titleTextContentBold}>App</span>       \n                  </div>\n                }\n                \n                { this.state.drawer === \"saved\" &&\n                  <div>\n                    <span>Saved Projects</span>\n                    {/* <span className={classes.titleTextContentBold}>App</span>        */}\n                  </div>\n                }\n                \n                { this.state.drawer === \"removableDrive\" &&\n                  <div>\n                    <span>Removable Drive</span>\n                  </div>\n                }\n                \n                { this.state.drawer === \"magnetoCalib\" &&\n                  <div>\n                    <span>Calibration</span>\n                  </div>\n                }                \n                                                \n              </p>\n            </TypoGraphy>\n          </div>\n        </AppBar>\n        \n\n        {/* //--------------------Drawer Render\n        //--------------------------------- */}\n\n        <nav className={classes.drawer}> \n          <Hidden smUp implementation=\"css\">\n            <Drawer\n                container={this.props.container}\n                variant=\"temporary\"\n                anchor={theme.direction == 'rtl' ? 'right' : 'left'}\n                open={this.state.mobileOpen}\n                onClose={this.drawerToggleHandler}\n                classes={{\n                  paper: classes.drawerPaper,\n                }}\n              >\n                {drawer}\n            </Drawer>\n          </Hidden>\n          <Hidden xsDown implementation=\"css\">\n            <Drawer\n              classes={{\n                paper: classes.drawerPaper,\n              }}\n              variant=\"permanent\"\n              open\n            >\n              {drawer}\n            </Drawer>\n          </Hidden>\n        </nav>\n        \n\n        { this.state.drawer === \"mapping\" && \n          <FabOne onClickStart={this.startDialogOpenHandler}\n                  onClickStop={this.stopDialogOpenHandler} \n                  processRunningState={this.state.processRunning}\n          />\n        }\n\n        {/* //------------------ Power Dialog Render\n        //-------------------------------------- */}\n\n        <Dialog\n          open={this.state.powerDialogOpen}\n          onClose={this.powerDialogCloseHandler}\n          style={{fontFamily: \"samsung-one-600\"}}\n        >\n          <DialogTitle>Device Power</DialogTitle>\n          <DialogContentStd > \n            <div style={{color:\"grey\"}}>\n              Make sure to stop mapping process first!\n            </div>\n            <List style={{margin: 0, marginTop: 65, padding: 0}}>\n              {/* <Divider/> */}\n              <ListItem button style={{ background: 'linear-gradient(90deg, #d32e2f 30%, #e53835 90%)', borderRadius: '8px'}} onClick={this.shutdownOnClickHandler}>\n                <div style={{padding: 2, width: '100%', textAlign:\"center\"}}>\n                  <b style={{color:\"white\", fontFamily: \"samsung-one-400\"}}>Power Off</b>\n                </div>\n              </ListItem>\n              {/* <Divider/> */}\n              <ListItem button style={{marginTop: 10, border: '1px #d32e2f solid', borderRadius: '8px'}} onClick={this.restartOnClickHandler}> \n                <div style={{ padding: 2, width: '100%', textAlign:'center'}}>\n                  <b style={{color:' #d32e2f', fontFamily: \"samsung-one-400\"}}>Restart</b>\n                </div>\n              </ListItem>\n              {/* <Divider/> */}\n            </List>\n          </DialogContentStd>\n        </Dialog>\n\n        {/* //-------------------- Start Mapping Dialog Render\n        //------------------------------------------------ */}\n\n        <Dialog\n          open={this.state.startDialogOpen}\n          onClose={this.startDialogCloseHandler}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Mapping Preparation</DialogTitle>\n          <DialogContent TextFieldUpdate={this.textFieldUpdateHandler}/>\n          <DialogActions>\n            <ButtonUI onClick={this.startDialogCloseHandler} color=\"primary\">\n              Cancel\n            </ButtonUI>\n              <DialogButton onClick={this.startDialogClickHandler}/>\n          </DialogActions>\n        </Dialog>\n\n        {/* //--------------------- Stop Mapping Dialog Render\n        //------------------------------------------------ */}\n\n        <Dialog\n          open={this.state.stopDialogOpen}\n          onClose={this.stopDialogCloseHandler}\n          aria-labelledby=\"form-dialog-title\"\n        >\n          <DialogTitle id=\"form-dialog-title\">Stop Recording</DialogTitle>\n          <DialogContentStd>\n            <DialogContentText>\n              <TypoGraphy paragraph>\n                <p>\n                  Are you sure to stop mapping process ?    \n                </p>\n              </TypoGraphy>\n            </DialogContentText>\n          </DialogContentStd>\n\n          <DialogActions>\n            <ButtonUI onClick={this.stopDialogCloseHandler} color=\"primary\">\n              Cancel\n            </ButtonUI>\n            <ButtonUI variant=\"contained\" onClick={this.stopDialogClickHandler} color=\"primary\">\n              YES\n            </ButtonUI>\n          </DialogActions>\n        </Dialog>   \n\n        {/* //------------------------ Main View Render\n        //----------------------------------------- */}\n\n        { this.state.drawer === \"mapping\" && \n          <div class={classes.containerMain}>\n            <Timeline statusPushed={statuses}/>\n          </div>\n        }\n\n        { this.state.drawer === \"saved\" && \n          <div class={classes.containerMain}>\n            <SnackbarProvider maxSnack={3}\n                              anchorOrigin={{\n                                vertical: 'bottom',\n                                horizontal: 'center',\n                              }}>\n              <FolderView projectFolders={projectFolders} copyOnClickHandler={this.copyOnClickHandler} \n                          deleteOnClickHandler={this.deleteOnClickHandler}\n                          socket={socket} />\n            </SnackbarProvider>\n          </div>\n        }\n\n        { this.state.drawer === \"power\" && \n          <div class={classes.containerMain}>\n          </div>\n        }\n        \n        { this.state.drawer === \"removableDrive\" && (\n            <div class={classes.containerMain} style={{textAlign: 'center',}}>\n              {/* <div style={{display: 'inline-block'}}> */}\n                <SnackbarProvider maxSnack={3} \n                                  anchorOrigin={{\n                                    vertical: 'bottom',\n                                    horizontal: 'center',\n                                  }}>\n                  <RemovableDrive \n                  status={removableDiskStatus}\n                  object={removableDiskObject}\n                  checkOnClickHandler={this.rmvableDCheckClickHandler} \n                  ejectOnClickHandler={this.rmvableDEjectClickHandler}\n                  socket={socket}/>\n                </SnackbarProvider>\n              {/* </div>   */}\n            </div>\n          )\n        }\n\n        { this.state.drawer === \"magnetoCalib\" && (\n            <div class={classes.containerMainFull}>\n              <MagnetoCalib\n              magnetoCalibState={this.state.magnetoCalib}\n              // magnetoCalibState=\"calibrating\"\n              magnetoCalibAccuracy={this.state.magnetoCalibAccuracy}\n              calibLaunchOnClickHandler={this.calibLaunchClickHandler}\n              calibStartOnClickHandler={this.calibStartClickHandler}\n              calibStopOnClickHandler={this.calibStopClickHandler}\n              calibSaveOnClickHandler={this.calibSaveClickHandler}\n              calibCloseOnClickHandler={this.calibCloseClickHandler}\n              />\n            </div>\n          )\n        }\n\n        { this.state.drawer === \"about\" && \n          <div class={classes.containerMain}>\n            <img style={{width: '100%', height: '100%'}} src={mandrone} alt=\"a man with drone\"/>\n          </div>\n        }\n        \n\n        {/* <div class={classes.containerMain}>\n         <Timeline open={false} statusPushed={statuses}/>\n        </div>)  */}\n      \n      </div>\n    );\n  }\n}\n\nApp.propTypes = {\n  classes: PropTypes.object.isRequired,\n  container: PropTypes.object,\n  theme: PropTypes.object.isRequired,\n};\nexport default withStyles(styles, { withTheme: true })(App);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport List from '@material-ui/core/List';\nimport ListItem from '@material-ui/core/ListItem';\nimport ListItemIcon from '@material-ui/core/ListItemIcon';\nimport ListItemText from '@material-ui/core/ListItemText';\nimport FolderIcon from '@material-ui/icons/Folder';\nimport MoreIcon from '@material-ui/icons/MoreVert';\nimport IconButton from '@material-ui/core/IconButton';\nimport Paper from '@material-ui/core/Paper';\nimport Typography from '@material-ui/core/Typography';\nimport { Menu, MenuList } from '@material-ui/core';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport {withSnackbar} from 'notistack';\nimport CloseIcon from  '@material-ui/icons/Close';\n\nimport './Font.css';\n\nconst styles = {\n    baseContainer: {\n        fontFamily: \"samsung-one-400\",\n    },\n    iconButton: {\n        padding: 0,\n        margin: 0,\n        float: 'right',\n    },\n    iconFolder: {\n        padding: 0,\n        margin: 0,\n    },\n}\n\n\nclass folderView extends React.Component {\n \n    state = {\n        anchorEl: null,\n        folderSelected: null,\n        snackbarOpen: false,\n    };\n       \n    handleClick = folder => event => {\n        this.setState({anchorEl: event.currentTarget})\n        this.setState({folderSelected: folder})\n    };\n    \n    handleCopy = () => {\n        this.props.copyOnClickHandler(this.state.folderSelected)\n        this.setState({anchorEl: null})\n        this.setState({folderSelected: null})\n    };\n    \n    handleDelete = () => {\n        this.props.deleteOnClickHandler(this.state.folderSelected)\n        this.setState({anchorEl: null})\n        this.setState({folderSelected: null})\n    };    \n    \n    handleClose = () => {\n        this.setState({anchorEl: null})\n        this.setState({folderSelected: null})\n    };\n    \n    componentDidMount() {\n        this.props.socket.on(\"copyProcessStart\", (data) => {\n            this.props.enqueueSnackbar('Copying Folder...', {\n                anchorOrigin: {\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                },\n                variant: \"info\"\n            });\n        });\n\n        this.props.socket.on(\"copyProcessFinish\", (data) => {\n            this.props.enqueueSnackbar(`Folder copied! ${data}`, {\n                anchorOrigin: {\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                },\n                variant: \"success\",\n            });\n        });\n\n        this.props.socket.on(\"copyProcessError\", (err) => {\n            this.props.enqueueSnackbar('Error copying folder, '+err, {\n                anchorOrigin: {\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                },\n                variant: \"error\"\n            });\n        });\n    }\n\n    render() {\n\n        // const projectsFolders = this.props.projectsFolders;\n        // const projectFolders = [];\n        const projectFolders = this.props.projectFolders;\n        const { anchorEl } = this.state;\n        \n        return(\n            <div style={styles.baseContainer}>\n                <List>\n                    {projectFolders.map(projectFolder => (\n                        <ListItem>\n                            <ListItemIcon style={styles.iconFolder}>\n                                <FolderIcon/>\n                            </ListItemIcon>\n                            <ListItemText insert \n                                        disableTypography \n                                        primary={<Typography type=\"body2\" style={{fontFamily: 'samsung-one-600', fontSize: '14px'}}>\n                                                 {projectFolder} \n                                                 </Typography>} \n                            />\n                            <IconButton style={styles.iconButton}\n                                        aria-owns={anchorEl ? 'folder-menu' : undefined}\n                                        aria-haspopup=\"true\"\n                                        onClick={this.handleClick(projectFolder)}\n                            >\n                                <MoreIcon/>\n                            </IconButton>\n                            \n                        </ListItem>\n                    ))}\n                </List>\n\n                <Menu\n                    id='folder-menu'\n                    anchorEl={anchorEl}\n                    open={Boolean(anchorEl)}\n                    onClose={this.handleClose}\n                >\n                    <MenuItem selected={false} onClick={this.handleCopy}>copy to drive</MenuItem>\n                    <MenuItem selected={false} onClick={this.handleDelete}>delete</MenuItem>\n                    {/* <MenuItem selected={false} onClick={this.handleClose}>{`${this.state.folderSelected}`}</MenuItem> */}\n                </Menu>\n            </div>\n        )\n    }\n      \n}\n\nexport default withSnackbar(folderView);\n\n","import React from 'react'\nimport Fab from '@material-ui/core/Fab'\nimport LinearProgress from '@material-ui/core/LinearProgress'\nimport PropTypes from 'prop-types';\nimport Button from '@material-ui/core/Button';\nimport { withSnackbar } from 'notistack';\n\nimport './Font.css'\n\nconst styles={\n    root: {\n        width: '100%',\n        display: 'inline-block',\n    },\n    headerText: {\n        margin: 0,\n        marginTop: 150,\n        padding: '0 0 0 0',\n        textAlign: 'center',\n        fontFamily: \"samsung-one-800\",\n        fontSize: 18,\n        color: 'red',\n    },\n    subHeaderText: {\n        margin: '25 0 0 0',\n        padding: 0,\n        textAlign: 'center',\n        fontFamily: \"samsung-one-400\",\n    },\n    fabContainer: {\n        marginTop: 65,\n        textAlign: 'center',\n    },\n}\n\nvar pageState = \"noDrive\";\n// var pageState = \"driveDetected\";\n\nclass removableDrive extends React.Component {\n\n    componentWillMount () {\n        this.props.socket.on(\"removableDiskNotDetected\", (data) => {\n            this.props.enqueueSnackbar('No Removable Drive Detected!', {\n                anchorOrigin: {\n                    vertical: 'bottom',\n                    horizontal: 'center',\n                },\n                variant: 'error',\n            });\n        });\n    }\n\n    render() {\n        \n        if(this.props.status === false) pageState = \"noDrive\";\n        else if(this.props.status === true) pageState = \"driveDetected\";\n\n        return (\n            <div style={styles.root}>\n                \n                { pageState === \"noDrive\" && \n                    <div>\n                        <p style={styles.headerText}>No removable drive detected</p>\n                        <p style={styles.subHeaderText}>Tap check below to scan for drives</p>\n                        <div style={styles.fabContainer}>\n                            <Fab style={{display: 'inline-block', margin: 'auto', paddingLeft: 25, \n                                        paddingRight: 25, width: 140,\n                                        fontFamily: \"samsung-one-600\"}} \n                                color=\"primary\" variant=\"extended\" \n                                onClick={this.props.checkOnClickHandler}>\n                                Check\n                            </Fab>\n                        </div>      \n                    </div>\n                }\n\n                { pageState === \"driveDetected\" &&\n                    <div>\n                        <p style={styles.headerText}>Removable Drive: {`${this.props.object.name}`} </p>\n                        \n                        <LinearProgress style={{width: '70%', display: 'inline-block', margin: 'auto'}} variant=\"determinate\" \n                                        value={ ((this.props.object.totalSpace - this.props.object.freeSpace)/this.props.object.totalSpace) *100}\n                        />\n\n                        <div style={{display: 'inline-block', width: '70%', padding: 0, margin: 0, textAlign: 'left', marginTop: 25, }}>\n                            <span style={{margin: 0, padding: 0, height: 15, width: 15, borderRadius: '50%', backgroundColor: '#6200EE', display: 'inline-block'}}></span>\n                            <p style={{display: 'inline-block', margin: 0, padding: 0, marginLeft: 10}}>Used space:</p>\n                            <p style={{display: 'inline-block', margin: 0, padding: 0, float: 'right', color: 'grey'}}>\n                                {`${( (this.props.object.totalSpace - this.props.object.freeSpace)/1000000 ).toFixed(2)}`} MB\n                            </p>\n                        </div>\n                        \n                        <div style={{display: 'inline-block', width: '70%', padding: 0, margin: 0, textAlign: 'left', marginTop: 10, }}>\n                            <span style={{margin: 0, padding: 0, height: 15, width: 15, borderRadius: '50%', backgroundColor: '#03DAC6', display: 'inline-block'}}></span>\n                            <p style={{display: 'inline-block', margin: 0, padding: 0, marginLeft: 10}}>Free space:</p>\n                            <p style={{display: 'inline-block', margin: 0, padding: 0, float: 'right', color: 'grey'}}>\n                                {`${(this.props.object.freeSpace/1000000).toFixed(2)}`} MB\n                            </p>\n                        </div>\n                \n                        <div style={styles.fabContainer}>\n                            <Fab style={{display: 'inline-block', margin: 'auto', paddingLeft: 25, \n                                        paddingRight: 25, width: 140}} \n                                color=\"secondary\" variant=\"extended\" \n                                onClick={this.props.ejectOnClickHandler}>\n                                Eject\n                            </Fab>\n                        </div>                          \n                    </div>\n                }\n            </div>\n        )\n    }\n}\n\nremovableDrive.propTypes = {\n    enqueueSnackbar: PropTypes.func.isRequired,\n};\n\nexport default withSnackbar(removableDrive);\n","import React from 'react'\nimport Fab from '@material-ui/core/Fab'\nimport device360 from './calib_magneto.svg'\nimport './Font.css'\n\nconst styles={\n    root: {\n        width: '100%',\n        height: '100%',\n        margin: '0px',\n        padding: '0px',\n        overflowX: 'hidden',\n        display: 'inline-block',\n    },\n    headerText: {\n        margin: 0,\n        marginTop: 150,\n        padding: '0 0 0 0',\n        textAlign: 'center',\n        fontFamily: \"samsung-one-800\",\n        fontSize: 18,\n        color: 'red',\n    },\n    subHeaderText: {\n        margin: '25 0 0 0',\n        padding: 0,\n        textAlign: 'center',\n        fontFamily: \"samsung-one-400\",\n    },\n    processText: {\n        marginTop: 75,\n        marginBottom: 25,\n        paddingLeft: 45,\n        paddingRight: 45,\n        textAlign: 'center',\n        fontFamily: 'samsung-one-400',\n        color: 'yellow',\n    },\n    fabContainer: {\n        marginTop: 65,\n        textAlign: 'center',\n        marginBottom: 25,\n    },\n    fabContainer2: {\n        height: '100%',\n        marginTop: 7,\n        marginBottom: 25,\n        textAlign: 'center',\n    },\n}\n\nvar magnetoCalibState = \"not ready\";\n\nclass magnetoCalib extends React.Component {\n    \n    \n    render() {\n\n        magnetoCalibState = this.props.magnetoCalibState;\n\n        // magnetoCalibState = \"ready\"\n\n        return (\n            <div style={styles.root}>\n                { magnetoCalibState === \"not ready\" &&  \n                    (<div>\n                        <p style={styles.headerText}>Tap below to calibrate magnetometer compass</p>\n                        <div style={styles.fabContainer}>\n                            <Fab style={{display: 'inline-block', margin: 'auto', paddingLeft: 25, \n                                        paddingRight: 25, width: 140,\n                                        fontFamily: \"samsung-one-600\"}} \n                                color=\"primary\" variant=\"extended\" \n                                onClick={this.props.calibLaunchOnClickHandler}>\n                                Calibrate\n                            </Fab>\n                        </div>      \n                    </div>)\n                } \n \n                { magnetoCalibState === \"ready\" &&\n                    (<div>\n                        <p style={styles.subHeaderText}>Calib result:</p>\n                        <br/>\n                        <p style={styles.subHeaderText}> {`${this.props.magnetoCalibAccuracy}`} </p>\n                        <br/>\n                        <br/>\n                        <br/>\n                        <div style={styles.fabContainer}>\n                            <Fab style={{display: 'inline-block', margin: 'auto', paddingLeft: 25, \n                                        paddingRight: 25, width: 140,\n                                        fontFamily: \"samsung-one-600\"}} \n                                color=\"primary\" variant=\"extended\" \n                                onClick={this.props.calibStartOnClickHandler}>\n                                Start\n                            </Fab>\n                        </div>    \n                        <div style={styles.fabContainer2}>\n                            <Fab style={{display: 'inline-block', margin: 'auto', paddingLeft: 25, \n                                        paddingRight: 25, width: 140,\n                                        fontFamily: \"samsung-one-600\"}} \n                                color=\"primary\" variant=\"extended\" \n                                onClick={this.props.calibSaveOnClickHandler}>\n                                Save\n                            </Fab>\n                        </div>    \n                        <div style={styles.fabContainer2}>\n                            <Fab style={{display: 'inline-block', margin: 'auto', paddingLeft: 25, \n                                        paddingRight: 25, width: 140,\n                                        fontFamily: \"samsung-one-600\"}} \n                                color=\"primary\" variant=\"extended\" \n                                onClick={this.props.calibCloseOnClickHandler}>\n                                Close\n                            </Fab>\n                        </div>    \n                    </div>)\n                }\n\n                { magnetoCalibState === \"calibrating\" &&\n                    <div style={styles.fabContainer2}>\n                        <div> \n                            <img style={{width: '75%', height: '75%'}} src={device360} alt=\"device 360\"/>\n                        </div>\n                        <p style={styles.processText}> Please rotate device 360 degrees by minimum, on Z axis</p>\n                        <Fab style={{display: 'inline-block', margin: 'auto', paddingLeft: 25, \n                                    paddingRight: 25, width: 140,\n                                    fontFamily: \"samsung-one-600\"}} \n                            color=\"secondary\" variant=\"extended\" \n                            onClick={this.props.calibStopOnClickHandler}>\n                            Finish\n                        </Fab>\n                    </div>    \n                }\n            </div>\n        )\n    }\n}\n\nexport default magnetoCalib;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n\n"],"sourceRoot":""}